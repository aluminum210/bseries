plugins {
  /* https://github.com/b3er/gradle-local-properties-plugin */
  id "com.github.b3er.local.properties" version "1.1"
}

import org.apache.tools.ant.filters.FixCrLfFilter
import org.apache.tools.ant.filters.ReplaceTokens

subprojects {

apply plugin: 'base'

task('copyResources', type: Copy) {
  from 'src/main/resources'
  exclude "**/*~"
  into "${buildDir}/tmp/${project.name}"

  /* Work-around for multi-project builds. */
  gradle.projectsEvaluated {
    filter(FixCrLfFilter)
    filter(ReplaceTokens, tokens: [version: project.version])
    filteringCharset = 'UTF-8'
  }
}

task('copySnippets', type: Copy) {
  println('Copying...')
  into "${buildDir}/tmp/${project.name}"
  from 'src/main/lua'
  exclude "**/*~"
  include "**/*.lua"
}

task('distZip', type: Zip) {
  from fileTree("${buildDir}/tmp/")
  destinationDir file("${distsDir}")
}


task('deployLocal', type: Copy) {
  /* Work-around for multi-project builds. */
  gradle.projectsEvaluated {
    from zipTree("${distsDir}/${distZip.archiveName}")
    /* 
     * `addonsDir` is defined in `local.properties` file. 
     * Example:
     * local.properties:
     *   addonsDir=D:/games/wow/Interface/AddOns/
     * Remember to use Java compatible URIs for file paths!
     */   
    into addonsDir
  }
}

task('ldoc', type: Exec) {
    /* 
     * `ldocExecutable` is defined in `local.properties` file. 
     * Example:
     * local.properties:
     *   ldocExecutable=D:\opt\chocolatey\lib\luarocks\luarocks-2.4.4-win32\systree\bin\ldoc.bat
     * Remember to use Java compatible URIs for file paths!
     */   
	executable ldocExecutable
	args "${buildDir}/tmp/${project.name}/", '--all', '--dir', "${buildDir}/tmp/${project.name}/doc/"
}

copySnippets.shouldRunAfter(clean)
copyResources.shouldRunAfter(clean)
ldoc.shouldRunAfter(clean)
distZip.shouldRunAfter(clean)
assemble.shouldRunAfter(clean)
ldoc.dependsOn(copySnippets)
ldoc.mustRunAfter(copySnippets)
distZip.mustRunAfter(copySnippets)
distZip.mustRunAfter(copyResources)
distZip.mustRunAfter(ldoc)
deployLocal.mustRunAfter(assemble)
assemble.dependsOn(copySnippets)
assemble.dependsOn(copyResources)
assemble.dependsOn(ldoc)
assemble.dependsOn(distZip)

}